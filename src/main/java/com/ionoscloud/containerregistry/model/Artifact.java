/*
 * Container Registry service
 * ## Overview Container Registry service enables IONOS clients to manage docker and OCI compliant registries for use by their managed Kubernetes clusters. Use a Container Registry to ensure you have a privately accessed registry to efficiently support image pulls. ## Changelog ### 1.1.0  - Added new endpoints for Repositories  - Added new endpoints for Artifacts  - Added new endpoints for Vulnerabilities  - Added registry vulnerabilityScanning feature 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@cloud.ionos.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ionoscloud.containerregistry.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Artifact
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-15T14:36:52.394811Z[Etc/UTC]")

public class Artifact {
  
  public static final String SERIALIZED_NAME_REPOSITORY_NAME = "repositoryName";
  @SerializedName(SERIALIZED_NAME_REPOSITORY_NAME)
  private String repositoryName;


  public static final String SERIALIZED_NAME_DIGEST = "digest";
  @SerializedName(SERIALIZED_NAME_DIGEST)
  private String digest;


  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;


  public static final String SERIALIZED_NAME_MEDIA_TYPE = "mediaType";
  @SerializedName(SERIALIZED_NAME_MEDIA_TYPE)
  private String mediaType;

  

  public Artifact repositoryName(String repositoryName) {
    
    this.repositoryName = repositoryName;
    return this;
  }

   /**
   * Get repositoryName
   * @return repositoryName
  **/
  @ApiModelProperty(example = "my-service", required = true, value = "")

  public String getRepositoryName() {
    return repositoryName;
  }


  public void setRepositoryName(String repositoryName) {
    this.repositoryName = repositoryName;
  }



  public Artifact digest(String digest) {
    
    this.digest = digest;
    return this;
  }

   /**
   * The digest of the artifact
   * @return digest
  **/
  @ApiModelProperty(example = "sha256:12345678901234567890123456789012", required = true, value = "The digest of the artifact")

  public String getDigest() {
    return digest;
  }


  public void setDigest(String digest) {
    this.digest = digest;
  }



  public Artifact tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public Artifact addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * The tags of an artifact
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"latest\",\"1.0.0\"]", value = "The tags of an artifact")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }



  public Artifact mediaType(String mediaType) {
    
    this.mediaType = mediaType;
    return this;
  }

   /**
   * The media type of the artifact
   * @return mediaType
  **/
  @ApiModelProperty(example = "application/vnd.oci.image.manifest.v1+json", required = true, value = "The media type of the artifact")

  public String getMediaType() {
    return mediaType;
  }


  public void setMediaType(String mediaType) {
    this.mediaType = mediaType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Artifact artifact = (Artifact) o;
    return Objects.equals(this.repositoryName, artifact.repositoryName) && Objects.equals(this.digest, artifact.digest) && Objects.equals(this.tags, artifact.tags) && Objects.equals(this.mediaType, artifact.mediaType);
  }




  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Artifact {\n");
    
    sb.append("    repositoryName: ").append(toIndentedString(repositoryName)).append("\n");

    sb.append("    digest: ").append(toIndentedString(digest)).append("\n");

    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");

    sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

